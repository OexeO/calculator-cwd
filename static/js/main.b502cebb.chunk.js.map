{"version":3,"sources":["components/Buttons.js","components/History.js","components/Display.js","core-functions.js","components/App.js","serviceWorker.js","index.js"],"names":["Buttons","className","id","onClick","this","props","onOperator","onSquareRoot","onSquare","onOneOverX","onClearEntry","onClear","onBackspace","onDigit","onPositiveNegative","onDecimal","onEqual","React","Component","History","historyList","createRef","element","scrollHeight","clientHeight","isOverflowedY","current","style","overflowY","scrollWidth","clientWidth","isOverflowedX","overflowX","historyClassName","isShowHistory","ref","history","map","item","index","key","formula","value","result","onHistoryItemClicked","onClearHistory","Display","onTextareaChanged","bind","onHistory","onChange","join","rows","input","evaluate","arrFormula","arrPostfix","stack","forEach","isNumber","push","isOperator","num1","Number","parseFloat","pop","num2","console","log","evaluatePostfix","length","peekedItem","getPriority","infix2Postfix","isNotNumber","App","state","afterCalculation","digit","target","innerText","setState","Calculator","concat","decimal","includes","operator","replace","lastEntry","filter","e","finalFormula","Math","sqrt","newHistoryItem","pow","currentInputLength","slice","isNaN","number","getAttribute","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b502cebb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttons\">\r\n        <button id=\"modulo\" onClick={this.props.onOperator}>%</button>\r\n        <button id=\"square-root\" onClick={this.props.onSquareRoot}>√x</button>\r\n        <button id=\"square\" onClick={this.props.onSquare}>x<sup>2</sup></button>\r\n        <button id=\"one-over-x\" onClick={this.props.onOneOverX}>1/x</button>\r\n\r\n        <button id=\"clear-entry\" onClick={this.props.onClearEntry}>CE</button>\r\n        <button id=\"clear\" onClick={this.props.onClear}>C</button>\r\n        <button id=\"backspace\" onClick={this.props.onBackspace}><i className=\"fas fa-backspace\"></i></button>\r\n        <button id=\"divide\" onClick={this.props.onOperator}>÷</button>\r\n\r\n        <button id=\"seven\" onClick={this.props.onDigit}>7</button>\r\n        <button id=\"eight\" onClick={this.props.onDigit}>8</button>\r\n        <button id=\"nine\" onClick={this.props.onDigit}>9</button>\r\n        <button id=\"multiply\" onClick={this.props.onOperator}>X</button>\r\n\r\n        <button id=\"four\" onClick={this.props.onDigit}>4</button>\r\n        <button id=\"five\" onClick={this.props.onDigit}>5</button>\r\n        <button id=\"six\" onClick={this.props.onDigit}>6</button>\r\n        <button id=\"subtract\" onClick={this.props.onOperator}>-</button>\r\n\r\n        <button id=\"one\" onClick={this.props.onDigit}>1</button>\r\n        <button id=\"two\" onClick={this.props.onDigit}>2</button>\r\n        <button id=\"three\" onClick={this.props.onDigit}>3</button>\r\n        <button id=\"add\" onClick={this.props.onOperator}>+</button>\r\n\r\n        <button id=\"positive-negative\" onClick={this.props.onPositiveNegative}>+/-</button>\r\n        <button id=\"zero\" onClick={this.props.onDigit}>0</button>\r\n        <button id=\"decimal\" onClick={this.props.onDecimal}>.</button>\r\n        <button id=\"equals\" onClick={this.props.onEqual}>=</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nfunction isOverflowedX(element) {\r\n  return element.scrollWidth > element.clientWidth;\r\n}\r\n\r\nfunction isOverflowedY(element) {\r\n  return element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nfunction addScrollbarIfNeeded(element) {\r\n  if (isOverflowedY(element)) element.style.overflowY = \"scroll\";\r\n  else element.style.overflowY = \"initial\";\r\n\r\n  if (isOverflowedX(element)) element.style.overflowX = \"scroll\";\r\n  else element.style.overflowX = \"initial\";\r\n}\r\n\r\nexport default class History extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.historyList = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    addScrollbarIfNeeded(this.historyList.current);\r\n  }\r\n\r\n  render() {\r\n    const historyClassName = this.props.isShowHistory ? \"history\" : \"history hidden\";\r\n\r\n    return (\r\n      <div className={historyClassName}>\r\n        <div className=\"history-list\" ref={this.historyList}>\r\n          {\r\n            this.props.history.map((item, index) => {\r\n              return (\r\n                <div key={index} className=\"history-item\">\r\n                  <div className=\"history-item-formula\">{item.formula}</div>\r\n                  <div className=\"history-item-result\" value={item.result} onClick={this.props.onHistoryItemClicked}>={item.result}</div>\r\n                  <hr></hr>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        <div className=\"bottom-btns\">\r\n          <button id=\"clear-history\" onClick={this.props.onClearHistory}><i className=\"far fa-trash-alt\"></i></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onTextareaChanged = this.onTextareaChanged.bind(this);\r\n  }\r\n\r\n  onTextareaChanged() {\r\n    // @Todo\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"display-toolbar\">\r\n        <div className=\"toolbar\">\r\n          <div>\r\n            Calculator\r\n          </div>\r\n          <div className=\"toolbar-item\" id=\"view-history\" onClick={this.props.onHistory}>{this.props.isShowHistory ? <i className=\"far fa-keyboard\"></i> : <i className=\"fas fa-history\"></i>}</div>\r\n        </div>\r\n        <form className=\"display\">\r\n          <textarea className=\"display-formula\" onChange={this.onTextareaChanged} value={this.props.formula.join(\"\")} ></textarea>\r\n          <textarea className=\"display-input\" id=\"display\" rows=\"1\" onChange={this.onTextareaChanged} value={this.props.input}></textarea>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","export function evaluate(arrFormula) {\r\n  const arrPostfix = infix2Postfix(arrFormula);\r\n  return evaluatePostfix(arrPostfix);\r\n}\r\n\r\nexport function infix2Postfix(arrFormula) {\r\n  let result = [], stack = [];\r\n\r\n  arrFormula.forEach(item => {\r\n    if (isNumber(item)) {\r\n      result.push(item);\r\n    } else if (isOperator(item)) {\r\n      while (stack.length > 0) {\r\n        const peekedItem = stack[stack.length - 1];\r\n\r\n        if (isOperator(peekedItem) && getPriority(peekedItem) >= getPriority(item)) {\r\n          result.push(peekedItem);\r\n          stack.pop();\r\n        } else break;\r\n      }\r\n\r\n      stack.push(item);\r\n    } else {\r\n      console.log(\"Unsupported yet.\");\r\n    }\r\n  });\r\n\r\n  while (stack.length > 0) {\r\n    result.push(stack.pop());\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function evaluatePostfix(arrPostfix) {\r\n  let stack = [];\r\n\r\n  arrPostfix.forEach(item => {\r\n    if (isNumber(item)) {\r\n      stack.push(item);\r\n    } else if (isOperator(item)) {\r\n      const num1 = Number.parseFloat(stack.pop()), num2 = Number.parseFloat(stack.pop());\r\n      let result = '';\r\n\r\n      switch (item) {\r\n        case '+':\r\n          result = num2 + num1;\r\n          break;\r\n        case '-':\r\n          result = num2 - num1;\r\n          break;\r\n        case '*':\r\n          result = num2 * num1;\r\n          break;\r\n        case '/':\r\n          result = num2 / num1;\r\n          break;\r\n        case '%':\r\n          result = num2 % num1;\r\n          break;\r\n        default:\r\n          console.log('Unsupported yet.');\r\n      }\r\n\r\n      stack.push(result + '');\r\n    } else {\r\n      console.log(\"Unsupported yet.\");\r\n    }\r\n  });\r\n\r\n  return Number.parseFloat(stack[0]);\r\n}\r\n\r\nexport function isNotNumber(input) {\r\n  return input === '+' ||\r\n         input === '-' ||\r\n         input === '*' ||\r\n         input === '/' ||\r\n         input === '%';\r\n}\r\n\r\nexport function isNumber(input) {\r\n  return !isNotNumber(input);\r\n}\r\n\r\nexport function isOperator(input) {\r\n  return input === '+' ||\r\n         input === '-' ||\r\n         input === '*' ||\r\n         input === '/' ||\r\n         input === '%';\r\n}\r\n\r\nexport function getPriority(input) {\r\n  if (input === '+' || input === '-') return 1;\r\n  else if (input === '*' || input === '/' || input === '%') return 2;\r\n  return 0;\r\n}\r\n","import React from 'react';\r\nimport Buttons from './Buttons';\r\nimport History from './History';\r\nimport Display from './Display';\r\nimport * as Calculator from '../core-functions';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formula: [],\r\n      history: [],\r\n      input: '0',\r\n      isShowHistory: false,\r\n      afterCalculation: false\r\n    }\r\n\r\n    this.onDigit = this.onDigit.bind(this);\r\n    this.onOperator = this.onOperator.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onClearEntry = this.onClearEntry.bind(this);\r\n    this.onEqual = this.onEqual.bind(this);\r\n    this.onDecimal = this.onDecimal.bind(this);\r\n    this.onBackspace = this.onBackspace.bind(this);\r\n    this.onHistory = this.onHistory.bind(this);\r\n    this.onHistoryItemClicked = this.onHistoryItemClicked.bind(this);\r\n    this.onClearHistory = this.onClearHistory.bind(this);\r\n    this.onPositiveNegative = this.onPositiveNegative.bind(this);\r\n    this.onSquareRoot = this.onSquareRoot.bind(this);\r\n    this.onSquare = this.onSquare.bind(this);\r\n    this.onOneOverX = this.onOneOverX.bind(this);\r\n\r\n  }\r\n\r\n  onDigit({ target }) {\r\n    const digit = target.innerText;\r\n    const input = this.state.input;\r\n\r\n    if (this.state.afterCalculation) {\r\n      this.setState({\r\n        input: digit,\r\n        afterCalculation: false\r\n      });\r\n    } else if (input === '0') {\r\n      this.setState({\r\n        input: digit\r\n      });\r\n    } else if (Calculator.isNotNumber(input)) {\r\n      this.setState({\r\n        input: digit,\r\n        formula: this.state.formula.concat(input)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        input: input.concat(digit)\r\n      });\r\n    }\r\n  }\r\n\r\n  onDecimal({ target }) {\r\n    const decimal = target.innerText;\r\n    const input = this.state.input;\r\n\r\n    if (this.state.afterCalculation) {\r\n      this.setState({\r\n        input: `0${decimal}`,\r\n        afterCalculation: false\r\n      });\r\n    } else if (Calculator.isNotNumber(input)) {\r\n      this.setState({\r\n        input: `0${decimal}`,\r\n        formula: this.state.formula.concat(input)\r\n      });\r\n    } else if (!input.includes(decimal)) {\r\n      this.setState({\r\n        input: input.concat(decimal),\r\n      });\r\n    }\r\n  }\r\n\r\n  onOperator({ target }) {\r\n    let operator = target.innerText;\r\n    const input = this.state.input;\r\n\r\n    if (operator === 'X') operator = '*';\r\n    else if (operator === '÷') operator = '/';\r\n\r\n    if (Calculator.isOperator(input)) {\r\n      this.setState({\r\n        input: operator,\r\n        afterCalculation: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formula: this.state.formula.concat(this.state.input),\r\n        input: operator,\r\n        afterCalculation: false\r\n      });\r\n    }\r\n  }\r\n\r\n  onPositiveNegative () {\r\n    const input = this.state.input;    \r\n    let result =  input;\r\n    let formula = this.state.formula;\r\n\r\n    if (Calculator.isNumber(input)) {\r\n      if(result.includes('-')){\r\n        result = result.replace('-','');\r\n      } else {\r\n        result = '-'.concat(input);\r\n      }\r\n\r\n      if ( formula.length > 0 ){\r\n        let lastEntry = formula[formula.length - 1];\r\n\r\n        if( lastEntry[lastEntry.length - 1] !== \")\" ){\r\n          formula = formula.concat(\"(\"+result+\")\");\r\n        } else {\r\n\r\n          formula.forEach(item => {\r\n            if ( item.includes(\"(\") ) {\r\n\r\n              formula = formula.filter(e => e !== lastEntry);\r\n              formula = formula.concat(\"(\"+result+\")\");\r\n            }\r\n          });\r\n\r\n        }\r\n      } else {\r\n        formula = [];\r\n      }\r\n  }\r\n\r\n    this.setState({\r\n      input: result,\r\n      formula: formula,\r\n      afterCalculation: false\r\n    });\r\n  }\r\n\r\n  onSquareRoot () {\r\n    let finalFormula = this.state.formula.concat(this.state.input);\r\n    let squareRootSymbol = '√';\r\n    const result = Math.sqrt(this.state.input);\r\n\r\n    const newHistoryItem = {\r\n      formula: squareRootSymbol.concat(finalFormula),\r\n      result: result\r\n    }\r\n\r\n    this.setState({\r\n      input: result + \"\",\r\n      formula: [],\r\n      history: [].concat(newHistoryItem, this.state.history),\r\n      afterCalculation: true\r\n    });\r\n\r\n  }\r\n\r\n  onSquare () {\r\n    let finalFormula = this.state.formula.concat(this.state.input);\r\n    const result = Math.pow(this.state.input, 2);\r\n\r\n    const newHistoryItem = {\r\n      formula: finalFormula.concat(\" ^ 2\"),\r\n      result: result\r\n    }\r\n\r\n    this.setState({\r\n      input: result + \"\",\r\n      formula: [],\r\n      history: [].concat(newHistoryItem, this.state.history),\r\n      afterCalculation: true\r\n    });\r\n  }\r\n\r\n  onOneOverX () {\r\n    let finalFormula = this.state.formula.concat(this.state.input);\r\n    const result = 1 / this.state.input;\r\n\r\n    const newHistoryItem = {\r\n      formula: \"1 / \".concat(finalFormula),\r\n      result: result\r\n    }\r\n\r\n    this.setState({\r\n      input: result + \"\",\r\n      formula: [],\r\n      history: [].concat(newHistoryItem, this.state.history),\r\n      afterCalculation: true\r\n    });\r\n\r\n  }\r\n\r\n  onClear() {\r\n    this.setState({\r\n      formula: [],\r\n      input: '0',\r\n      afterCalculation: false\r\n    });\r\n  }\r\n\r\n  onClearEntry() {\r\n    this.setState({\r\n      input: '0',\r\n      afterCalculation: false\r\n    });\r\n  }\r\n\r\n  onBackspace() {\r\n    const input = this.state.input;\r\n    const formula = this.state.formula;\r\n    const currentInputLength = input.length;\r\n\r\n    if (input === 'Infinity' || input === '-Infinity' || input === 'NaN') {\r\n      this.setState({\r\n        input: '0',\r\n        afterCalculation: false\r\n      });\r\n    } else if (currentInputLength > 1) {\r\n      this.setState({\r\n        input: input.slice(0, currentInputLength - 1),\r\n        afterCalculation: false\r\n      });\r\n    } else if (input !== '0') {\r\n      this.setState({\r\n        input: '0',\r\n        afterCalculation: false\r\n      });\r\n    } else if (formula.length > 0) {\r\n      this.setState({\r\n        input: formula[formula.length - 1],\r\n        formula: formula.slice(0, formula.length - 1),\r\n        afterCalculation: false\r\n      });\r\n    }\r\n  }\r\n\r\n  onEqual() {\r\n\r\n    let finalFormula = this.state.formula.concat(this.state.input);\r\n\r\n    finalFormula.forEach(item => {\r\n      if ( item.includes(\"(\") ) {\r\n        finalFormula = finalFormula.filter(e => e !== item); // will return array without negate\r\n      }\r\n    });\r\n\r\n    const result = Calculator.evaluate(finalFormula);\r\n\r\n    if (!Number.isNaN(result)) {\r\n      const newHistoryItem = {\r\n        formula: finalFormula,\r\n        result: result\r\n      }\r\n\r\n      this.setState({\r\n        input: result + \"\",\r\n        formula: [],\r\n        history: [].concat(newHistoryItem, this.state.history),\r\n        afterCalculation: true\r\n      });\r\n    }\r\n  }\r\n\r\n  onHistory() {\r\n    this.setState({\r\n      isShowHistory: !this.state.isShowHistory\r\n    });\r\n  }\r\n\r\n  onClearHistory() {\r\n    this.setState({\r\n      history: []\r\n    });\r\n  }\r\n\r\n  onHistoryItemClicked({ target }) {\r\n    const number = target.getAttribute(\"value\");\r\n    const input = this.state.input;\r\n\r\n    if (Calculator.isNumber(input)) {\r\n      this.setState({\r\n        input: number\r\n      });\r\n    } else {\r\n      this.setState({\r\n        input: number,\r\n        formula: this.state.formula.concat(input)\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"calculator\">\r\n          <Display\r\n            formula={this.state.formula}\r\n            input={this.state.input}\r\n            onHistory={this.onHistory}\r\n            isShowHistory={this.state.isShowHistory}\r\n          />\r\n\r\n          <Buttons\r\n            onClear={this.onClear}\r\n            onClearEntry={this.onClearEntry}\r\n            onEqual={this.onEqual}\r\n            onDecimal={this.onDecimal}\r\n            onDigit={this.onDigit}\r\n            onOperator={this.onOperator}\r\n            onBackspace={this.onBackspace}\r\n            onPositiveNegative={this.onPositiveNegative}\r\n            onSquareRoot={this.onSquareRoot}\r\n            onSquare={this.onSquare}\r\n            onOneOverX={this.onOneOverX}\r\n          />\r\n\r\n          <History\r\n            isShowHistory={this.state.isShowHistory}\r\n            history={this.state.history}\r\n            onHistoryItemClicked={this.onHistoryItemClicked}\r\n            onEqual={this.onEqual}\r\n            onClearHistory={this.onClearHistory}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"content\">\r\n            <h1>Windows 10 Based <span className=\"green\">Calculator</span> App</h1>\r\n            <p>A simple calculator made using react.js with <i className=\"fas fa-coffee\"></i> and <i className=\"far fa-heart\"></i> by Ryan</p>\r\n            <h2 className=\"green\">Features:</h2>\r\n            <ul>\r\n              <li>Number Inputs (0, 1-9)</li>\r\n              <li>Backspace</li>\r\n              <li>Clear Entry (CE)</li>\r\n              <li>All Clear (C)</li>\r\n              <li>History</li>\r\n              <li>Modulo (%)</li>\r\n              <li>Square Root (√x)</li>\r\n              <li>Square (x<sup>2</sup>)</li>\r\n              <li>One over X (1/x)</li>\r\n              <li>Basic Arithmetic (+, -, *, /)</li>\r\n              <li>Decimals</li>\r\n              <li>Positive/Negative Integer</li>\r\n            </ul>\r\n            <p>\r\n              Note: This is a react.js <span className=\"green\"> practice only</span>, <span className=\"green\"> for fun</span> and <span className=\"green\">presentation.</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}